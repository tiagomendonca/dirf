% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/dino.R
\name{dino}
\alias{dino}
\title{DiNo Predictions}
\usage{
dino(
  rf,
  df1,
  y,
  df2,
  h = 0.1,
  nodes_dist = NULL,
  type = "mean",
  quantiles = c(0.25, 0.5, 0.75)
)
}
\arguments{
\item{rf}{Fitted \code{ranger} object (typically shallow: 50 trees, max depth 5). Must be trained on the \code{df1} dataset.}

\item{df1}{A data frame used as the training dataset.}

\item{y}{A numeric vector representing the response variable in the training dataset.}

\item{df2}{A data frame containing new data for which predictions are made.}

\item{h}{A positive numeric value representing the DiNo hyperparameter, controlling the influence of node distances.}

\item{nodes_dist}{A data frame of node distances by tree, obtained using \code{dirf::distances}. If \code{NULL},
the function automatically calculates the node distances based on the input Random Forest model and training data.}

\item{type}{A character string indicating the type of prediction: \code{"mean"} for mean predictions or \code{"quantile"} for quantile predictions.}

\item{quantiles}{A numeric vector specifying the quantiles to predict (e.g., \code{c(0.025, 0.5, 0.975)}). Only used when \code{type = "quantile"}.}
}
\value{
A numeric vector or matrix of predicted values, depending on the type of prediction:
\itemize{
\item If \code{type = "mean"}, returns a numeric vector of mean predictions.
\item If \code{type = "quantile"}, returns a numeric matrix with rows corresponding to observations and columns to quantiles.
}
}
\description{
Computes DiNo (Distance with Nodes) predictions for the mean or quantiles of the response variable
based on a Random Forest model. This method leverages the distances between nodes in the forest to produce
weighted predictions.
}
\examples{

set.seed(123)

df1 <- tibble::tibble(
  x1 = stats::rnorm(300, 0, 1),
  x2 = stats::rnorm(300, 0, 1),
  x3 = stats::rnorm(300, 0, 1),
  y = 2 * x1 + 1.5 * x2 + x3 + stats::rnorm(300, 0, 1)
)

df2 <- tibble::tibble(
  x1 = stats::rnorm(5, 0, 1),
  x2 = stats::rnorm(5, 0, 1),
  x3 = stats::rnorm(5, 0, 1),
  y = 2 * x1 + 1.5 * x2 + x3 + stats::rnorm(5, 0, 1)
)

# mean

rf <- ranger::ranger(
  y ~ .,
  max.depth = 5,
  write.forest = TRUE,
  data = df1,
  num.trees = 10
)

dino(
  rf = rf,
  df1 = df1,
  y = df1$y,
  df = df2,
  h = 0.1,
  type = "mean"
)

# quantiles
rf <- ranger::ranger(
  y ~ .,
  max.depth = 5,
  write.forest = TRUE,
  quantreg = TRUE,
  data = df1,
  num.trees = 10
)

dino(
  rf = rf,
  df1 = df1,
  y = df1$y,
  df = df2,
  h = 0.1,
  type = "quantile",
  quantiles = c(.025, .5, .975)
)

}
