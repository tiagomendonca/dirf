% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/ranbu.R
\name{ranbu}
\alias{ranbu}
\title{RanBu - Random Bushes}
\usage{
ranbu(rf, df1, y, df2, h = 0.1, type = "mean", quantiles = c(0.25, 0.5, 0.75))
}
\arguments{
\item{rf}{A Random Forest object created using the \code{ranger} package. The model must be trained with
\code{write.forest = TRUE} for terminal node extraction.}

\item{df1}{A data frame representing the training dataset used to fit the Random Forest model.}

\item{y}{A numeric vector of responses corresponding to the training dataset (\code{df1}).}

\item{df2}{A data frame containing new observations for which predictions are to be made.}

\item{h}{A numeric value for the RanBu hyperparameter, which controls the weighting of distances
between nodes. Default is \code{0.1}.}

\item{type}{A character string specifying the type of prediction. Can be \code{"mean"} for mean predictions
or \code{"quantile"} for quantile predictions.}

\item{quantiles}{A numeric vector specifying the quantiles to predict. Required only when \code{type = "quantile"}.
Values must be between 0 and 1. Default is \code{c(0.25, 0.5, 0.75)}.}
}
\value{
A tibble:
\itemize{
\item For \code{type = "mean"}, a single column tibble with predicted mean values for \code{df2}.
\item For \code{type = "quantile"}, a tibble with one column per quantile, containing the predicted quantile values for \code{df2}.
}
}
\description{
Generates predictions using the RanBu (Random Bushes) approach for conditional mean or quantiles.
This method performs post-hoc kernel weighting over Random Forest terminal nodes, leveraging
tree-based distances to compute similarity weights. The weighting is controlled by the bandwidth
parameter \code{h}, applied to Breiman’s distance (1 – RF proximity).
}
\examples{
# Generate example data
set.seed(123)

df1 <- tibble::tibble(
  x1 = stats::rnorm(300, 0, 1),
  x2 = stats::rnorm(300, 0, 1),
  x3 = stats::rnorm(300, 0, 1),
  y = 2 * x1 + 1.5 * x2 + x3 + stats::rnorm(300, 0, 1)
)

df2 <- tibble::tibble(
  x1 = stats::rnorm(5, 0, 1),
  x2 = stats::rnorm(5, 0, 1),
  x3 = stats::rnorm(5, 0, 1),
  y = 2 * x1 + 1.5 * x2 + x3 + stats::rnorm(5, 0, 1)
)

# Train a Random Forest model
rf <- ranger::ranger(
  y ~ .,
  data = df1,
  max.depth = 5,
  num.trees = 10,
  write.forest = TRUE
)

# Mean predictions
predictions_mean <- ranbu(
  rf = rf,
  df1 = df1,
  y = df1$y,
  df2 = df2,
  h = 0.1,
  type = "mean"
)
print(predictions_mean)

# Quantile predictions
rf_quantile <- ranger::ranger(
  y ~ .,
  data = df1,
  max.depth = 5,
  num.trees = 10,
  write.forest = TRUE,
  quantreg = TRUE
)

predictions_quantile <- ranbu(
  rf = rf_quantile,
  df1 = df1,
  y = df1$y,
  df2 = df2,
  h = 0.1,
  type = "quantile",
  quantiles = c(0.025, 0.5, 0.975)
)
print(predictions_quantile)

}
